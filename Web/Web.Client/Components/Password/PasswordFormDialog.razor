@using Core.Models
@inject MudBlazor.IDialogService DialogService
@using Web.Client.Services

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">@((Password.Id != 0) ? "Modifier le mot de passe" : "Ajouter un mot de passe")</MudText>
        <MudDivider />
        <EditForm Model="Password" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <MudTextField Label="Titre" @bind-Value="Password.Title" Required="true" />
            <MudTextField Label="Nom d'utilisateur" @bind-Value="Password.Username" Required="true" />
            <MudTextField Label="Mot de passe" @bind-Value="Password.EncryptedPassword" InputType="InputType.Password" Required="true" />
            <MudTextField Label="URL" @bind-Value="Password.Url" />
            <MudTextField Label="Notes" @bind-Value="Password.Notes" Lines="3" />
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Sauvegarder</MudButton>
            <MudButton OnClick="Close" Color="Color.Secondary" Class="ml-2">Annuler</MudButton>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Inject] public PasswordService PasswordService { get; set; }
    [Parameter] public PasswordEntry Password { get; set; }

    async Task HandleValidSubmit()
    {
        if (Password.Id == 0)
        {
            await PasswordService.CreatePasswordAsync(Password);
        }
        else
        {
            await PasswordService.UpdatePasswordAsync(Password);
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    void Close() => MudDialog.Cancel();
}
